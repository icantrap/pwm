#!/bin/bash
#
# todo. documentation: project name, location, license

search() {
  if [ -z "$1" ]
  then
    ls -1 sites
  else
    find sites -name "*$1*" -exec basename {} \;
  fi

  return 0
}

show() {
  if [ -z "$1" ]
  then
    echo "Usage: pwm show site"
    return 1
  fi

  if [ ! -f "sites/$1" ]
  then
    echo "Nonexistent site: $1"
    return 1
  fi

  cat "sites/$1"
}

list() {
  [ ! -f "$PIHOLE_DIR/whitelist.txt" ] && return

  # look for the site headers. show just the site name in the results.
  grep -E "# === site:(.*) start ===" "$PIHOLE_DIR/whitelist.txt" | sed -E 's/# === site:(.*) start ===/\1/'
}

add() {
  if [ -z "$1" ]
  then
    echo "Usage: pwm add site"
    return 1
  fi

  if [ ! -f "sites/$1" ]
  then
    echo "Nonexistent site: $1"
    return 1
  fi

  # todo. accept multiple sites

  cat sites/"$1" >> "$PIHOLE_DIR/whitelist.txt"
}

remove() {
  if [ -z "$1" ]
  then
    echo "Usage: pwm remove site"
    return 1
  fi

  # todo. refactor?
  if [ ! -f "sites/$1" ]
  then
    echo "Nonexistent site: $1"
    return 1
  fi

  # todo. warn if the site isn't in whitelist.
  # todo. accept multiple sites

  perl -i -0pe "s/# === site:$1 start ===.*# === site:$1 end ===\n//sg" "$PIHOLE_DIR/whitelist.txt"
}

# load the environment
PIHOLE_DIR=/etc/pihole

# shellcheck source=/dev/null
[ -f ~/.pwmrc ] && source "$HOME/.pwmrc"
# shellcheck source=/dev/null
[ -f .pwmrc ] && source .pwmrc

echo "PIHOLE_DIR=$PIHOLE_DIR"

# validate the environment
if [ ! -d $PIHOLE_DIR ]
then
  echo "PIHOLE_DIR($PIHOLE_DIR) does not exist"
  exit 1
fi

# launch
if declare -f "$1" >/dev/null 2>&1; then
  "$@"
else
  echo "Unrecognized command: $1"

  exit 1
fi

# todo. help screens?
# todo. continuous integration
# todo. automatic update